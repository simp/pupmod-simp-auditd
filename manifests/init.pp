# Configure the audit daemon for use.
#
# This module is a component of the System Integrity Management Platform, a
# a managed security compliance framework built on Puppet.
#
# This module is optimally designed for use within a larger SIMP ecosystem, but
# it can be used independently:
#
# * When included within the SIMP ecosystem,
#   security compliance settings will be managed from the Puppet server.
#
# * If used independently, all SIMP-managed security subsystems are disabled by
#   default, and must be explicitly opted into by administrators.  Please review
#   the simp_options parameters.
#
# Any variable that is not described here can be found in auditd.conf(5) and
# auditctl(8).
#
# @param lname
#   An alias for the 'name' variable in the configuration file. This is used
#   since $name is a reserved keyword in Puppet.
#
# @param immutable
#   Whether or not to make the configuration immutable. Be aware that, should
#   you choose to make the configuration immutable, you will not be able to
#   change your audit rules without a reboot.
#
# @param root_audit_level
#   What level of auditing should be used for su-root activity. Be aware that
#   setting this to anything besides 'basic' may overwhelm your system and/or
#   log server.
#   Options can be, 'basic', 'aggressive', 'insane'
#    - Basic: Safe, should not follow program execution outside of the base app
#    - Aggressive: Adds execve
#    - Insane: Adds fork, vfork, write, chown, creat, link, mkdir, rmdir
#
# @param uid_min
#   The minimum UID for human users on the system. Any logs generated by
#   users below this number will be ignored unless set to absolute first when
#   using auditd::add_rule.
#
# @param at_boot
#   If true, modify the Grub settings to enable auditing at boot time.
#   Meets CCE-26785-6
#
# @param syslog
#   If true, set up audispd to send logs to syslog.
#   Meets CCE-26933-2
#
# @param default_audit_profile
#   Set the default audit rules of the system to the named profile.
#   Supported Values: 'simp', false
#
#   If false, no built-in audit profile is used.
#
# @param service_name
#   The name of the auditd service.
#
# @param package_name
#   The name of the auditd package.
#
# @param enable
#   If true, enable auditing.
#
class auditd (
  Boolean                             $ignore_failures         = true,
  Stdlib::Absolutepath                $log_file                = '/var/log/audit/audit.log',
  Enum['RAW','NOLOG']                 $log_format              = 'RAW',
  String                              $log_group               = 'root',
  Stdlib::Compat::Integer             $priority_boost          = '3',
  Auditd::Flush                       $flush                   = 'INCREMENTAL',
  Stdlib::Compat::Integer             $freq                    = '20',
  Stdlib::Compat::Integer             $num_logs                = '5', # CCE-27522-2
  Enum['lossy','lossless']            $disp_qos                = 'lossy',
  Stdlib::Absolutepath                $dispatcher              = '/sbin/audispd',
  Auditd::NameFormat                  $name_format             = 'USER',
  String                              $lname                   = $facts['fqdn'],
  Stdlib::Compat::Integer             $max_log_file            = '24', # CCE-27550-3
  Auditd::MaxLogFileAction            $max_log_file_action     = 'ROTATE',# CCE-27237-7
  Stdlib::Compat::Integer             $space_left              = '75',
  Auditd::SpaceLeftAction             $space_left_action       = 'SYSLOG', # CCE-27238-5 : No guarantee of e-mail server so sending to syslog.
  String                              $action_mail_acct        = 'root',# CCE-27241-9
  Stdlib::Compat::Integer             $admin_space_left        = '50',
  Auditd::SpaceLeftAction             $admin_space_left_action = 'SUSPEND', # CCE-27239-3 : No guarantee of e-mail server so sending to syslog.
  Auditd::DiskFullAction              $disk_full_action        = 'SUSPEND',
  Auditd::DiskErrorAction             $disk_error_action       = 'SUSPEND',
  Stdlib::Compat::Integer             $buffer_size             = '16384',
  Stdlib::Compat::Integer             $failure_mode            = '2',
  Stdlib::Compat::Integer             $rate                    = '0',
  Boolean                             $immutable               = false,
  Enum['basic','aggressive','insane'] $root_audit_level        = 'basic',
  Stdlib::Compat::Integer             $uid_min                 = $facts['uid_min'],
  Boolean                             $at_boot                 = true, # CCE-26785-6
  Boolean                             $syslog                  = simplib::lookup('simp_options::syslog', {'default_value' => false }),  # CCE-26933-2
  Variant[Enum['simp'],Boolean]       $default_audit_profile   = 'simp',
  String                              $service_name            = $::auditd::params::service_name,
  String                              $package_name            = $::auditd::params::package_name,
  String                              $package_ensure          = 'latest',
  Boolean                             $enable                  = true,
) inherits ::auditd::params {

  if $enable {

    # This is done here so that the kernel option can be properly removed if
    # auditing is to be disabled on the system.
    if $at_boot {
      $_grub_enable = true
    }
    else {
      $_grub_enable = false
    }

    include '::auditd::install'
    include '::auditd::config'
    include '::auditd::service'

    Class['::auditd::install'] ->
    Class['::auditd::config']  ~>
    Class['::auditd::service'] ->
    Class['::auditd']

    Class['::auditd::install'] -> Class['::auditd::config::grub']

    if $syslog {
      include '::auditd::config::logging'

      Class['::auditd::config::logging'] ~>
      Class['::auditd::service']
    }
  }
  else {
    $_grub_enable = false
  }

  # This is done deliberately so that you cannot conflict a direct call to
  # auditd::config::grub with an include somewhere else. auditd::config::grub
  # would normally be a private class but may be used independently if
  # necessary.
  class { '::auditd::config::grub': enable => $_grub_enable }
}

# == Class: auditd
#
# Configure the audit daemon for use.
#
# == Parameters
#
# Any variable that is not described here can be found in auditd.conf(5) and
# auditctl(8).
#
# [*lname*]
#   An alias for the 'name' variable in the configuration file. This is used
#   since $name is a reserved keyword in Puppet.
#
# [*immutable*]
#   Whether or not to make the configuration immutable. Be aware that, should
#   you choose to make the configuration immutable, you will not be able to
#   change your audit rules without a reboot.
#   *Default*: 'false'
#
# [*root_audit_level*]
#   What level of auditing should be used for su-root activity. Be aware that
#   setting this to anything besides 'basic' may overwhelm your system and/or
#   log server.
#   Options can be, 'basic', 'aggressive', 'insane'
#    - Basic: Safe, should not follow program execution outside of the base app
#    - Aggressive: Adds execve
#    - Insane: Adds fork, vfork, write, chown, creat, link, mkdir, rmdir
#   *Default*: 'basic'
#
# [*uid_min*]
#   Type: Integer
#   Default: $::uid_min
#     The minimum UID for human users on the system. Any logs generated by
#     users below this number will be ignored unless set to absolute first when
#     using auditd::add_rule.

# [*at_boot*]
#   Type: Boolean
#   Default: true
#     If true, modify the Grub settings to enable auditing at boot time.
#     Meets CCE-26785-6
#
# [*to_syslog*]
#   Type: Boolean
#   Default: true
#     If true, set up audispd to send logs to syslog.
#     Meets CCE-26933-2
#
# == Authors
#
# Trevor Vaughan <tvaughan@onyxpoint.com>
#
class auditd (
  $ignore_failures = true,
  $log_file = '/var/log/audit/audit.log',
  $log_format = 'RAW',
  $log_group = 'root',
  $priority_boost = '3',
  $flush = 'INCREMENTAL',
  $freq = '20',
  # CCE-27522-2
  $num_logs = '5',
  $disp_qos = 'lossy',
  $dispatcher = '/sbin/audispd',
  $name_format = 'USER',
  $lname = $::fqdn,
  # CCE-27550-3
  $max_log_file = '24',
  # CCE-27237-7
  $max_log_file_action = 'ROTATE',
  $space_left = '75',
  # CCE-27238-5 : No guarantee of e-mail server so sending to syslog.
  $space_left_action = 'SYSLOG',
  # CCE-27241-9
  $action_mail_acct = 'root',
  $admin_space_left = '50',
  # CCE-27239-3 : No guarantee of e-mail server so sending to syslog.
  $admin_space_left_action = 'SUSPEND',
  $disk_full_action = 'SUSPEND',
  $disk_error_action = 'SUSPEND',
  $buffer_size = '16384',
  $failure_mode = '2',
  $rate = '0',
  $immutable = false,
  $root_audit_level = 'basic',
  $uid_min = $::uid_min,
  # CCE-26785-6
  $at_boot = true,
  # CCE-26933-2
  $to_syslog = true
) {

  if $at_boot { include 'auditd::grub' }
  if $to_syslog { include 'auditd::audisp' }

  auditd::add_rules { 'init.d_auditd':
    content => "-w /etc/rc.d/init.d/auditd -p wa -k auditd
                -w /var/log/audit.log -p wa -k audit-logs"
  }

  auditd::add_rules { 'rotated_audit_logs':
    content => template('auditd/rotated_audit_logs.erb')
  }

  if $::operatingsystem in ['RedHat','CentOS'] and $::operatingsystemmajrelease < '7' {
    concat_build { 'auditd':
      order   => ['head', '*.rules.pre', 'default_drop', 'base', '*.rules.post', 'tail'],
      target  => '/etc/audit/audit.rules',
      require => Package['audit'],
      notify  => File['/etc/audit/audit.rules']
    }

    concat_fragment { 'auditd+head':
      content => template('auditd/head.erb')
    }

    concat_fragment { 'auditd+default_drop':
      content => template('auditd/default_drop.erb')
    }

    concat_fragment { 'auditd+base':
      content => template('auditd/base.erb')
    }

    concat_fragment { 'auditd+tail':
      content => template('auditd/tail.erb')
    }
  }
  else {
    file { '/etc/audit/rules.d':
      ensure  => 'directory',
      owner   => 'root',
      group   => 'root',
      mode    => '0640',
      recurse => true,
      purge   => true
    }

    file { '/etc/audit/rules.d/00_head.rules':
      content => template('auditd/head.erb'),
      notify  => Service['auditd']
    }

    file { '/etc/audit/rules.d/05_default_drop.rules':
      content => template('auditd/default_drop.erb'),
      notify  => Service['auditd']
    }

    file { '/etc/audit/rules.d/50_base.rules':
      content => template('auditd/base.erb'),
      notify  => Service['auditd']
    }

    file { '/etc/audit/rules.d/99_tail.rules':
      content => template('auditd/tail.erb'),
      notify  => Service['auditd']
    }
  }

  file { '/etc/audit/audit.rules':
    owner   => 'root',
    group   => 'root',
    mode    => '0600',
    audit   => content,
    require => Package['audit'],
    notify  => Service['auditd']
  }

  file { '/etc/audit/auditd.conf':
    owner   => 'root',
    group   => 'root',
    mode    => '0600',
    notify  => Service['auditd'],
    content => template('auditd/auditd.conf.erb')
  }

  file { '/var/log/audit':
    ensure  => 'directory',
    owner   => 'root',
    group   => 'root',
    mode    => '0700',
    require => Package['audit']
  }

  package { 'audit': ensure => 'latest' }

  case $::operatingsystem {
    'RedHat','CentOS' : {
      # CCE-27058-7
      service { 'auditd':
        ensure     => 'running',
        enable     => true,
        hasrestart => true,
        hasstatus  => true,
        provider   => 'redhat',
        require    => Package['audit']
      }
    }
    default : {
        fail("Error: $operatingsystem is not yet supported by module '$module_name'")
    }
  }

  validate_bool($ignore_failures)
  validate_absolute_path($log_file)
  validate_array_member($log_format,['RAW','NOLOG'],'i')
  validate_integer($priority_boost)
  validate_array_member($flush,['NONE','INCREMENTAL','DATA','SYNC'],'i')
  validate_integer($freq)
  validate_integer($num_logs)
  validate_array_member($disp_qos,['lossy','lossless'])
  validate_absolute_path($dispatcher)
  validate_array_member($name_format,['NONE','HOSTNAME','FQD','NUMERIC','USER'],'i')
  validate_integer($max_log_file)
  validate_array_member($max_log_file_action,['IGNORE','SYSLOG','SUSPEND','ROTATE','KEEP_LOGS'],'i')
  validate_integer($space_left)
  validate_array_member($space_left_action,['IGNORE','SYSLOG','EMAIL','EXEC','SUSPEND','SINGLE','HALT'],'i')
  validate_integer($admin_space_left)
  validate_array_member($admin_space_left_action,['IGNORE','SYSLOG','EMAIL','EXEC','SUSPEND','SINGLE','HALT'],'i')
  validate_array_member($disk_full_action,['IGNORE','SYSLOG','EMAIL','EXEC','SUSPEND','SINGLE','HALT'],'i')
  validate_array_member($disk_error_action,['IGNORE','SYSLOG','EMAIL','EXEC','SUSPEND','SINGLE','HALT'],'i')
  validate_integer($buffer_size)
  validate_integer($failure_mode)
  validate_integer($rate)
  validate_bool_simp($immutable)
  validate_array_member($root_audit_level,['basic','aggressive','insane'])
  validate_integer($uid_min)
  validate_bool($at_boot)
  validate_bool($to_syslog)
}
